@model CoreCodedChatbot.Web.ViewModels.Moderation.TransferUserViewModel
@{
    ViewData["Title"] = "Transfer User Account";
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/TransferUser.css"/>
}

<div class="jumbotron">
    <h2>Transfer User Account</h2>
    <p style="color: red">@Html.ValidationMessage("TransferStatus")</p>
</div>

@{
        Html.BeginForm("ProcessTransferUser", "Moderation", new {@name="TransferForm" });
}

<div class="form-group">
    @Html.LabelFor(m => m.OldUsername)
    @Html.EditorFor(m => m.OldUsername, new {@class = "form-control"})
    @Html.ValidationMessageFor(m => m.OldUsername)
</div>
<div class="form-group">
    @Html.LabelFor(m => m.NewUsername)
    @Html.EditorFor(m => m.NewUsername, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.NewUsername)
</div>
<br/>
<div class="row">
    <button id="submitButton" class="btn btn-primary" type="submit" onclick="disableButton(event)">Submit</button>
</div>
@{
    Html.EndForm();
}

<script>
    function disableButton(event) {
        debugger;
        $("#submitButton").attr("disabled", true);
        event.target.form.submit();
    } 
</script>